service: iw-102-stepfunctions-nodejs 

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: eu-west-1
  profile: 101profile
  versionFunctions: false
  apiKeys:
    - ${opt:stage, self:provider.stage}-myFirstKey
  usagePlan:
    quota:
      limit: 5000
      offset: 2
      period: MONTH
    throttle:
      burstLimit: 200
      rateLimit: 100

plugins:
  - serverless-step-functions

functions:
  flakey:
    handler: flakey.handler
    description: A Lambda that randomly fails 90% of the time
    memorySize: 128
    timeout: 2
  monitor:
    handler: monitor.handler
    description: A Lambda to recieve Notifications
    memorySize: 128
    timeout: 2

stepFunctions:
  stateMachines:
    iw102NotificationMachine:
      events:
        - http:
            path: action/start
            method: GET
            private: true
        - http:
            path: action/start
            method: POST
            private: true
        - http:
            path: action/status
            method: POST
            action: DescribeExecution
            private: true
        - http:
            path: action/stop
            method: POST
            action: StopExecution
            private: true
      
      definition:
        Comment: "A sample step function to demonstrate Notifications"
        StartAt: FirstState
        States:

          FirstState:
            Type: Wait
            Seconds: 5
            Next: FlakeyState

          FlakeyState:
            Type: Task
            Resource:
              Fn::GetAtt: [flakey, Arn]
            Next: SuccessState
            
          SuccessState:
            Type: Succeed

      notifications:
        ABORTED: 
          - lambda: !GetAtt MonitorLambdaFunction.Arn
        FAILED:
          - lambda: !GetAtt MonitorLambdaFunction.Arn
        RUNNING:
          - lambda: !GetAtt MonitorLambdaFunction.Arn
        SUCCEEDED:
          - lambda: !GetAtt MonitorLambdaFunction.Arn